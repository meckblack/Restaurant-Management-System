@model FMS_Objects.Enities.Staff
@using FMS_Objects.Enities;

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>

</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class=" modal-body">
        <div class="container-fluid">
            <div class="content">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header" data-background-color="purple">
                                <h3 class="modal-title">Create Staff Profile</h3>
                            </div>
                            <div class="card-content">
                                <form>
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.StaffId)
                                    @Html.HiddenFor(model => model.RestaurantId)

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffFirstName, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffFirstName, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffFirstName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffLastName, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffLastName, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffLastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffMiddleName, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffMiddleName, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffMiddleName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffEmail, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffEmail, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffEmail, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffAddress, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffAddress, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffGender, new { @class = "control-label" })
                                                @Html.DropDownListFor(m => m.StaffGender, new SelectList(Enum.GetValues(typeof(FMS_Objects.Enums.Gender))), " ", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffGender, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffPhoneNumber, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffPhoneNumber, " ", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffPhoneNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffDateOfBirth, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffDateOfBirth, " ", new { @class = "form-control", @type = "datetime" })
                                                @Html.ValidationMessageFor(model => model.StaffDateOfBirth, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffDateOfEmployment, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffDateOfEmployment, " ", new { @class = "form-control", @type = "datetime" })
                                                @Html.ValidationMessageFor(model => model.StaffDateOfEmployment, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffDepartment, new { @class = "control-label" })
                                                @Html.DropDownListFor(m => m.StaffDepartment, new SelectList(Enum.GetValues(typeof(FMS_Objects.Enums.Department))), " ", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffDepartment, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffAccountName, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffAccountName, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffAccountName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffAccountNumber, new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.StaffAccountNumber, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffAccountNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group label-floating">
                                                @Html.LabelFor(model => model.StaffBank, new { @class = "control-label" })
                                                @Html.DropDownListFor(m => m.StaffBank, new SelectList(Enum.GetValues(typeof(FMS_Objects.Enums.Bank))), " ", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.StaffBank, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="modal-footer">
                                        <input class="btn btn-primary" type="submit" value="Add" />
                                        <button class="btn btn-warning" data-dismiss="modal">Close</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script>
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");

    $(function () {
        $(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });
    });
</script>